// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "delete",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteRight",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "ctrl+d",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteRight",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "alt+delete",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteWordRight",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "backspace",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteLeft",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "ctrl+h",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteLeft",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "alt+backspace",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteWordLeft",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "ctrl+k",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "deleteAllRight",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "cmd+x",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "editor.action.clipboardCutAction",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "cmd+c",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "editor.action.clipboardCopyAction",
      "interval": 100
    },
    "when": "editorTextFocus && inStickySelectionMode"
  },
  {
    "key": "cmd+v",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "editor.action.clipboardPasteAction",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "cmd+/",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "editor.action.commentLine",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "ctrl+[Semicolon]",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[Semicolon]",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "editor.action.commentLine",
      "interval": 100
    },
    "when": "editorTextFocus && !editorReadonly && inStickySelectionMode"
  },
  {
    "key": "ctrl+alt+k ctrl+alt+d",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+d",
    "command": "sticky-selection.exitStickySelectionModeWithSelectionKeeped",
    "args": {
      "command": "editor.action.addSelectionToNextFindMatch",
      "interval": 100
    },
    "when": "editorTextFocus && inStickySelectionMode"
  },
  {
    "key": "ctrl+alt+e",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+e",
    "command": "sticky-selection.exitStickySelectionMode",
    "args": {
      "command": "editor.action.insertCursorAtEndOfEachLineSelected",
      "interval": 100
    },
    "when": "editorTextFocus && inStickySelectionMode"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+f",
    "command": "notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+alt+f",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+alt+f",
    "command": "notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+i",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus && inStickySelectionMode"
  },
  {
    "key": "alt+space",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus && inStickySelectionMode"
  },
  {
    "key": "ctrl+alt+j",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+j",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+alt+h",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+alt+m",
    "command": "editor.action.showContextMenu",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+n",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+p",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  }
]
